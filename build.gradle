buildscript {
    repositories {
        mavenCentral()
		maven {
			name = "gt"
			url = "https://gregtech.overminddl1.com/"
		}
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "OC repo"
			url = "http://maven.cil.li/"
		}
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'com.gregoriust.gregtech:gregtech_1.7.10:SNAPSHOT:dev'
    }
}

apply plugin: 'idea'
idea{
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

repositories {
	maven {
		name = "gt"
		url = "https://gregtech.overminddl1.com/"
	}
}

//allprojects {
//	tasks.withType(JavaCompile) {
//		options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
//	}
//}

apply plugin: 'forge'

version = "1.0.0-a.50"
group= "com.kbi.qwertech" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "qwertech"

sourceCompatibility = 1.7
targetCompatibility = 1.7
compileJava.options.bootClasspath = org.gradle.internal.jvm.Jvm.current().getJre().getHomeDir().toString() +"/lib/rt.jar"
compileJava {
	options.encoding = "UTF-8"
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

dependencies {
	compile fileTree(dir: 'lib', include: '*.jar')
	compile "com.gregoriust.gregtech:gregtech_1.7.10:SNAPSHOT:dev"
	
	runtime 'org.apache.commons:commons-math3:3.2' // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'org.jfree:jcommon:1.0.21'             // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'org.jfree:jfreechart:1.0.17'          // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'com.miglayout:miglayout-swing:4.2'    // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'net.sf.opencsv:opencsv:2.3'           // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime "io.netty-opis:Netty-opis:4.0.23"      // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime "mcp.mobius.opis:Opis:1.2.5_1.7.10:dev"
	compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	compileOnly "net.sengir.forestry:forestry_1.7.10:4.2.16.64:dev"
	compileOnly "com.mod-buildcraft:buildcraft:7.1.23:dev"
	compileOnly "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"
	compileOnly "micdoodle8.mods:MicdoodleCore:1.7-3.0.12.504:Dev"
	compileOnly "micdoodle8.mods:GalacticraftCore:1.7-3.0.12.504:Dev"
	compileOnly "micdoodle8.mods:Galacticraft-Planets:1.7-3.0.12.504:Dev"
	compileOnly "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev"
	compileOnly "enviromine:EnviroMine:1.3.124:deobf"
	compileOnly "vazkii.botania:Botania:r1.8-250:deobf"
	compileOnly "mods.railcraft:Railcraft_1.7.10:9.12.3.0:dev"
	compileOnly "twilightforest:twilightforest:1.7.10-2.3.8dev:dev"
	compileOnly "appeng:appliedenergistics2:rv3-beta-6:dev"
	compileOnly "cofh:CoFHLib:1.7.10R3.0.3:dev"
	compileOnly "applecore:AppleCore:1.7.10-3.1.1:deobf"
	compileOnly "li.cil.oc:OpenComputers:MC1.7.10-1.7.2.1204:dev"
	// This ComputerCraft thing is *SUCH* a hack, but ComputerCraft is... not right...  This only works because of CodeChickenCore Magic being included up above...
	compileOnly "dan200.computercraft:ComputerCraft:1.75"
	compileOnly "openblocks:OpenBlocks:1.7.10-1.6-1.7.10:deobf"
	compileOnly "openmods:OpenModsLib:1.7.10-0.10:deobf"
	compileOnly "ic2:IC2Classic:1.2.1.8:dev"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		exclude 'thumbs.db'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		exclude 'thumbs.db'
    }
}

def filteredSourceDir = file("${buildDir}/filtered") 

sourceSets {
	ahem {
		java {
			srcDirs = [file("${buildDir}/sources/java")]
			//include 'com/kbi/qwertech/**'
			exclude 'com/kbi/qwertech/QwerTech.java'
		}
	}
}


// copy the main sources and filter any '$version' occurences. 
task processVersion (type: Copy, dependsOn: 'sourceMainJava') { 
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    outputs.upToDateWhen { false }
    from "build/sources/java/com/kbi/qwertech/QwerTech.java"
    into filteredSourceDir 
    expand 'version':project.version
} 

compileJava.dependsOn processVersion 

sourceSets {
    // This source set will contain all sources that we filter 
    filtered { 
        java { 
            srcDirs = [sourceSets.ahem.java, filteredSourceDir] 
        } 
    } 
} 

// tell the compileJava task to compile the filtered source 
compileJava.source = sourceSets.filtered.java 

task deobfJar(type: Jar, dependsOn: 'jar') {
    from "build/classes/main"
	from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		exclude 'thumbs.db'
    }
    classifier "dev"
}

task sourceJar(type: Jar, dependsOn: 'sourceMainJava') {
    from "build/sources/java/com/kbi/qwertech/api"
    classifier "api"
}

artifacts {
    archives deobfJar
	archives sourceJar
}

idea { module { inheritOutputDirs = true } }
